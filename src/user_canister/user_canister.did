type FileNode = record {
  id : nat64;
  content : nat64;
  name : text;
  children : vec nat64;
  parent : opt nat64;
};
type RegisterUser = record { name : text; description : text };
type Result = variant { Ok : User; Err : text };
type User = record { name : text; description : text };
service : {
  create_new_file : (text, opt nat64) -> (FileNode);
  delete_file : (nat64) -> (opt FileNode);
  get_all_files : () -> (opt vec record { nat64; FileNode }) query;
  get_file : (nat64) -> (opt FileNode) query;
  register : (RegisterUser) -> (Result);
}